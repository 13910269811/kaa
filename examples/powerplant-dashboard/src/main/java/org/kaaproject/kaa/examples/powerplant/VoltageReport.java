/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.examples.powerplant;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VoltageReport extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VoltageReport\",\"namespace\":\"org.kaaproject.kaa.examples.powerplant\",\"fields\":[{\"name\":\"samples\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"VoltageSample\",\"fields\":[{\"name\":\"panelId\",\"type\":\"int\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"voltage\",\"type\":\"double\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> samples;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public VoltageReport() {}

  /**
   * All-args constructor.
   */
  public VoltageReport(java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> samples) {
    this.samples = samples;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return samples;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: samples = (java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'samples' field.
   */
  public java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> getSamples() {
    return samples;
  }

  /**
   * Sets the value of the 'samples' field.
   * @param value the value to set.
   */
  public void setSamples(java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> value) {
    this.samples = value;
  }

  /** Creates a new VoltageReport RecordBuilder */
  public static org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder newBuilder() {
    return new org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder();
  }
  
  /** Creates a new VoltageReport RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder newBuilder(org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder other) {
    return new org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder(other);
  }
  
  /** Creates a new VoltageReport RecordBuilder by copying an existing VoltageReport instance */
  public static org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder newBuilder(org.kaaproject.kaa.examples.powerplant.VoltageReport other) {
    return new org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder(other);
  }
  
  /**
   * RecordBuilder for VoltageReport instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VoltageReport>
    implements org.apache.avro.data.RecordBuilder<VoltageReport> {

    private java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> samples;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.examples.powerplant.VoltageReport.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.samples)) {
        this.samples = data().deepCopy(fields()[0].schema(), other.samples);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing VoltageReport instance */
    private Builder(org.kaaproject.kaa.examples.powerplant.VoltageReport other) {
            super(org.kaaproject.kaa.examples.powerplant.VoltageReport.SCHEMA$);
      if (isValidValue(fields()[0], other.samples)) {
        this.samples = data().deepCopy(fields()[0].schema(), other.samples);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'samples' field */
    public java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> getSamples() {
      return samples;
    }
    
    /** Sets the value of the 'samples' field */
    public org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder setSamples(java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample> value) {
      validate(fields()[0], value);
      this.samples = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'samples' field has been set */
    public boolean hasSamples() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'samples' field */
    public org.kaaproject.kaa.examples.powerplant.VoltageReport.Builder clearSamples() {
      samples = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public VoltageReport build() {
      try {
        VoltageReport record = new VoltageReport();
        record.samples = fieldSetFlags()[0] ? this.samples : (java.util.List<org.kaaproject.kaa.examples.powerplant.VoltageSample>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
