/*
 * Copyright 2014-2015 CyberVision, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

# ifndef KAA_DEFAULTS_H_
# define KAA_DEFAULTS_H_

/**
 *
 * DO NOT EDIT THIS FILE. IT IS AUTO-GENERATED.
 *
 */

# include "kaa_common.h"

# ifdef __cplusplus
extern "C" {
# endif

# define BUILD_VERSION                  "0.7.1-SNAPSHOT"
# define BUILD_COMMIT_HASH              ""

# define APPLICATION_TOKEN              "86577622085403234668"

# define CONFIG_SCHEMA_VERSION          3
# define PROFILE_SCHEMA_VERSION         1
# define SYSTEM_NF_SCHEMA_VERSION       1
# define USER_NF_SCHEMA_VERSION         1
# define LOG_SCHEMA_VERSION             1


# define KAA_SYNC_TIMEOUT               60000L



typedef struct {
    const char *    name;
    uint16_t         version;
} kaa_events_schema_version_t;

# define KAA_EVENT_SCHEMA_VERSIONS_SIZE    0

static const kaa_events_schema_version_t KAA_EVENT_SCHEMA_VERSIONS[KAA_EVENT_SCHEMA_VERSIONS_SIZE] = {
};



/**
 * @brief Uses to represent transport-specific connection data to establish
 * connection to Bootstrap servers.
 *
 * @see kaa_transport_protocol_id_t
 * @see kaa_access_point_t
 */
typedef struct {
    kaa_transport_protocol_id_t    protocol_id;
    kaa_access_point_t             access_point;
} kaa_bootstrap_server_connection_data_t;

# define KAA_BOOTSTRAP_ACCESS_POINT_COUNT    2

static const kaa_bootstrap_server_connection_data_t KAA_BOOTSTRAP_ACCESS_POINTS[KAA_BOOTSTRAP_ACCESS_POINT_COUNT] =
{
    {
        { 0xfb9a3cf0, 1 },
        {
            0x95f7e40f,
            318,
            (char []) {
            0 , 0 , 1 , 38 , 48 , -126 , 1 , 34 , 48 , 13 , 6 , 9 , 42 , -122 , 72 , -122 , -9 , 13 , 1 , 1 , 1 , 5 , 0 , 3 , -126 , 1 , 15 , 0 , 48 , -126 , 1 , 10 , 2 , -126 , 1 , 1 , 0 , -104 , -82 , -33 , -18 , -90 , -102 , -121 , -119 , 124 , -15 , -2 , -21 , -100 , 102 , 84 , 115 , 58 , 122 , -72 , 111 , -39 , -33 , -29 , -56 , 105 , -54 , 115 , 42 , 39 , 73 , 35 , -52 , -17 , 113 , -71 , 107 , 74 , 125 , 112 , -7 , 96 , 37 , 110 , -100 , -61 , -27 , -59 , -48 , -62 , -86 , 18 , 50 , 74 , -40 , -117 , -40 , 8 , 90 , 89 , 57 , 95 , 35 , -9 , 28 , -64 , 101 , 2 , -29 , 32 , 19 , -27 , -57 , -50 , 33 , -114 , -19 , -10 , -38 , 92 , 107 , 8 , -19 , 111 , -123 , -106 , -23 , -8 , -74 , 23 , 51 , -35 , 38 , -9 , -62 , -110 , 29 , 33 , 125 , 19 , -14 , -61 , 1 , 75 , -89 , -54 , -27 , -16 , 49 , -41 , 54 , -31 , 23 , 15 , -88 , 46 , 111 , 76 , -18 , -112 , -101 , -111 , -116 , -118 , 92 , 34 , 23 , 75 , 76 , -3 , -105 , 47 , 39 , 37 , 51 , 81 , -121 , -74 , -126 , -114 , -49 , -77 , 74 , 54 , -12 , -120 , 35 , -104 , -22 , 79 , 111 , 68 , -102 , 48 , -64 , -122 , -61 , 0 , 44 , 42 , 42 , -13 , 22 , 102 , -27 , 71 , 50 , -15 , 14 , -65 , 54 , 104 , -98 , -104 , 127 , -34 , -81 , -21 , 82 , 2 , 31 , -99 , -11 , 32 , -123 , -17 , -10 , 44 , 27 , 87 , -30 , 72 , -59 , 115 , -49 , 71 , 46 , -33 , -55 , -82 , -117 , -101 , -124 , -26 , -78 , -93 , 35 , -118 , -64 , -97 , -29 , 114 , -70 , -99 , 26 , 17 , 37 , -96 , 64 , -63 , -121 , -86 , 66 , -45 , -36 , 56 , 80 , 104 , 72 , -24 , 127 , -38 , 61 , 58 , 7 , -82 , -91 , -47 , -73 , -94 , -95 , -52 , 72 , -20 , 59 , -126 , 126 , 83 , -7 , -66 , -57 , -112 , -126 , 53 , -57 , 30 , 3 , 2 , 3 , 1 , 0 , 1 , 0 , 0 , 0 , 12 , 49 , 57 , 50 , 46 , 49 , 54 , 56 , 46 , 57 , 46 , 54 , 51 , 0 , 0 , 38 , -95             }
        }
    },
    {
        { 0x56c8ff92, 1 },
        {
            0x95f7e40f,
            318,
            (char []) {
            0 , 0 , 1 , 38 , 48 , -126 , 1 , 34 , 48 , 13 , 6 , 9 , 42 , -122 , 72 , -122 , -9 , 13 , 1 , 1 , 1 , 5 , 0 , 3 , -126 , 1 , 15 , 0 , 48 , -126 , 1 , 10 , 2 , -126 , 1 , 1 , 0 , -104 , -82 , -33 , -18 , -90 , -102 , -121 , -119 , 124 , -15 , -2 , -21 , -100 , 102 , 84 , 115 , 58 , 122 , -72 , 111 , -39 , -33 , -29 , -56 , 105 , -54 , 115 , 42 , 39 , 73 , 35 , -52 , -17 , 113 , -71 , 107 , 74 , 125 , 112 , -7 , 96 , 37 , 110 , -100 , -61 , -27 , -59 , -48 , -62 , -86 , 18 , 50 , 74 , -40 , -117 , -40 , 8 , 90 , 89 , 57 , 95 , 35 , -9 , 28 , -64 , 101 , 2 , -29 , 32 , 19 , -27 , -57 , -50 , 33 , -114 , -19 , -10 , -38 , 92 , 107 , 8 , -19 , 111 , -123 , -106 , -23 , -8 , -74 , 23 , 51 , -35 , 38 , -9 , -62 , -110 , 29 , 33 , 125 , 19 , -14 , -61 , 1 , 75 , -89 , -54 , -27 , -16 , 49 , -41 , 54 , -31 , 23 , 15 , -88 , 46 , 111 , 76 , -18 , -112 , -101 , -111 , -116 , -118 , 92 , 34 , 23 , 75 , 76 , -3 , -105 , 47 , 39 , 37 , 51 , 81 , -121 , -74 , -126 , -114 , -49 , -77 , 74 , 54 , -12 , -120 , 35 , -104 , -22 , 79 , 111 , 68 , -102 , 48 , -64 , -122 , -61 , 0 , 44 , 42 , 42 , -13 , 22 , 102 , -27 , 71 , 50 , -15 , 14 , -65 , 54 , 104 , -98 , -104 , 127 , -34 , -81 , -21 , 82 , 2 , 31 , -99 , -11 , 32 , -123 , -17 , -10 , 44 , 27 , 87 , -30 , 72 , -59 , 115 , -49 , 71 , 46 , -33 , -55 , -82 , -117 , -101 , -124 , -26 , -78 , -93 , 35 , -118 , -64 , -97 , -29 , 114 , -70 , -99 , 26 , 17 , 37 , -96 , 64 , -63 , -121 , -86 , 66 , -45 , -36 , 56 , 80 , 104 , 72 , -24 , 127 , -38 , 61 , 58 , 7 , -82 , -91 , -47 , -73 , -94 , -95 , -52 , 72 , -20 , 59 , -126 , 126 , 83 , -7 , -66 , -57 , -112 , -126 , 53 , -57 , 30 , 3 , 2 , 3 , 1 , 0 , 1 , 0 , 0 , 0 , 12 , 49 , 57 , 50 , 46 , 49 , 54 , 56 , 46 , 57 , 46 , 54 , 51 , 0 , 0 , 38 , -96             }
        }
    }};



# define KAA_CONFIGURATION_DATA_LENGTH    18

static const char KAA_CONFIGURATION_DATA[KAA_CONFIGURATION_DATA_LENGTH] =
{
0 , 0 , -85 , -34 , -63 , -109 , 50 , 82 , 65 , -92 , -72 , -81 , 82 , 111 , 14 , 81 , -92 , -18 };

# ifdef __cplusplus
} // extern "C"
# endif

# endif /* KAA_DEFAULTS_H_ */

