/*
 * Copyright 2014-2015 CyberVision, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

# ifndef KAA_DEFAULTS_H_
# define KAA_DEFAULTS_H_

/**
 *
 * DO NOT EDIT THIS FILE. IT IS AUTO-GENERATED.
 *
 */

# include <stdint.h>
# include "kaa_common.h"

# ifdef __cplusplus
extern "C" {
# endif

# define BUILD_VERSION                   "0.7.0-SNAPSHOT"
# define BUILD_COMMIT_HASH               ""

# define APPLICATION_TOKEN               "07551659512279905377"

# define CONFIG_SCHEMA_VERSION           2
# define PROFILE_SCHEMA_VERSION          2
# define SYSTEM_NF_SCHEMA_VERSION        1
# define USER_NF_SCHEMA_VERSION          1
# define LOG_SCHEMA_VERSION              2

# define KAA_SYNC_TIMEOUT                60000L



typedef struct {
    const char *    name;
    uint16_t         version;
} kaa_events_schema_version_t;

# define KAA_EVENT_SCHEMA_VERSIONS_SIZE    1

static const kaa_events_schema_version_t KAA_EVENT_SCHEMA_VERSIONS[KAA_EVENT_SCHEMA_VERSIONS_SIZE] = {
    {
          /* .name = */   "Device Event Class Family"
        , /* .version = */1
    }};



/**
 * @brief Uses to represent transport-specific connection data to establish
 * connection to Bootstrap servers.
 *
 * @see kaa_transport_protocol_id_t
 * @see kaa_access_point_t
 */
typedef struct {
    kaa_transport_protocol_id_t    protocol_id;
    kaa_access_point_t             access_point;
} kaa_bootstrap_server_connection_data_t;

# define KAA_BOOTSTRAP_ACCESS_POINT_COUNT    2

static const kaa_bootstrap_server_connection_data_t KAA_BOOTSTRAP_ACCESS_POINTS[KAA_BOOTSTRAP_ACCESS_POINT_COUNT] =
{
    {
        { 0xfb9a3cf0, 1 },
        {
            0x95f7e40f,
            316,
            (char []) {
            0 , 0 , 1 , 38 , 48 , -126 , 1 , 34 , 48 , 13 , 6 , 9 , 42 , -122 , 72 , -122 , -9 , 13 , 1 , 1 , 1 , 5 , 0 , 3 , -126 , 1 , 15 , 0 , 48 , -126 , 1 , 10 , 2 , -126 , 1 , 1 , 0 , -101 , -27 , 87 , -24 , -57 , -98 , 50 , -61 , 34 , 32 , -35 , -94 , -53 , -37 , 31 , -112 , 67 , -93 , 16 , 66 , -114 , -73 , -28 , -2 , 0 , 116 , -121 , 66 , -109 , -106 , -90 , -59 , -3 , 119 , 124 , -79 , 40 , 9 , -79 , 86 , 42 , 117 , -110 , -52 , 62 , 20 , 5 , -1 , 16 , -73 , -127 , 74 , -102 , 103 , -48 , -4 , -17 , 26 , -12 , 74 , -41 , -18 , -51 , -50 , -46 , 11 , -83 , 7 , 89 , -68 , -92 , 13 , -17 , 75 , 60 , -24 , 104 , -102 , -93 , -57 , -6 , -11 , -98 , 29 , -111 , 119 , 14 , 21 , -118 , -89 , -37 , 50 , -99 , -88 , 31 , -61 , -68 , -48 , 49 , 4 , 85 , -56 , 38 , -75 , 83 , 25 , -105 , 113 , 0 , -106 , 98 , -63 , -12 , 15 , -2 , 115 , -93 , 98 , 49 , 59 , 95 , -26 , 29 , -89 , -59 , 69 , 93 , 115 , 31 , -108 , -25 , -38 , -88 , -64 , 39 , 46 , 11 , 125 , 103 , 34 , 102 , 15 , 98 , 79 , 127 , -32 , 102 , -59 , -48 , -108 , 46 , -113 , 5 , -20 , 59 , -57 , -35 , 21 , 88 , -15 , 84 , -113 , -31 , -18 , -2 , -26 , -14 , 44 , -61 , 58 , 44 , -23 , 117 , 21 , 54 , 8 , -89 , 86 , 68 , -85 , -6 , -37 , 126 , 83 , 10 , -89 , -34 , 94 , -20 , -55 , 9 , -102 , -15 , 116 , -127 , 8 , 103 , 66 , 9 , 54 , -47 , 111 , 61 , -72 , 19 , 29 , 37 , -1 , 107 , -122 , -55 , -49 , -91 , 18 , -92 , -83 , -30 , 71 , 25 , -127 , 70 , 12 , 15 , 34 , 13 , 75 , 119 , -121 , -40 , 115 , -17 , 90 , 110 , 119 , 111 , -61 , 21 , -6 , -91 , 1 , -117 , 81 , 27 , -20 , -15 , -72 , 15 , 122 , -35 , -21 , 21 , 111 , 91 , -102 , 73 , 75 , 2 , 3 , 1 , 0 , 1 , 0 , 0 , 0 , 10 , 49 , 48 , 46 , 50 , 46 , 49 , 46 , 49 , 57 , 48 , 0 , 0 , 38 , -95             }
        }
    },
    {
        { 0x56c8ff92, 1 },
        {
            0x95f7e40f,
            316,
            (char []) {
            0 , 0 , 1 , 38 , 48 , -126 , 1 , 34 , 48 , 13 , 6 , 9 , 42 , -122 , 72 , -122 , -9 , 13 , 1 , 1 , 1 , 5 , 0 , 3 , -126 , 1 , 15 , 0 , 48 , -126 , 1 , 10 , 2 , -126 , 1 , 1 , 0 , -101 , -27 , 87 , -24 , -57 , -98 , 50 , -61 , 34 , 32 , -35 , -94 , -53 , -37 , 31 , -112 , 67 , -93 , 16 , 66 , -114 , -73 , -28 , -2 , 0 , 116 , -121 , 66 , -109 , -106 , -90 , -59 , -3 , 119 , 124 , -79 , 40 , 9 , -79 , 86 , 42 , 117 , -110 , -52 , 62 , 20 , 5 , -1 , 16 , -73 , -127 , 74 , -102 , 103 , -48 , -4 , -17 , 26 , -12 , 74 , -41 , -18 , -51 , -50 , -46 , 11 , -83 , 7 , 89 , -68 , -92 , 13 , -17 , 75 , 60 , -24 , 104 , -102 , -93 , -57 , -6 , -11 , -98 , 29 , -111 , 119 , 14 , 21 , -118 , -89 , -37 , 50 , -99 , -88 , 31 , -61 , -68 , -48 , 49 , 4 , 85 , -56 , 38 , -75 , 83 , 25 , -105 , 113 , 0 , -106 , 98 , -63 , -12 , 15 , -2 , 115 , -93 , 98 , 49 , 59 , 95 , -26 , 29 , -89 , -59 , 69 , 93 , 115 , 31 , -108 , -25 , -38 , -88 , -64 , 39 , 46 , 11 , 125 , 103 , 34 , 102 , 15 , 98 , 79 , 127 , -32 , 102 , -59 , -48 , -108 , 46 , -113 , 5 , -20 , 59 , -57 , -35 , 21 , 88 , -15 , 84 , -113 , -31 , -18 , -2 , -26 , -14 , 44 , -61 , 58 , 44 , -23 , 117 , 21 , 54 , 8 , -89 , 86 , 68 , -85 , -6 , -37 , 126 , 83 , 10 , -89 , -34 , 94 , -20 , -55 , 9 , -102 , -15 , 116 , -127 , 8 , 103 , 66 , 9 , 54 , -47 , 111 , 61 , -72 , 19 , 29 , 37 , -1 , 107 , -122 , -55 , -49 , -91 , 18 , -92 , -83 , -30 , 71 , 25 , -127 , 70 , 12 , 15 , 34 , 13 , 75 , 119 , -121 , -40 , 115 , -17 , 90 , 110 , 119 , 111 , -61 , 21 , -6 , -91 , 1 , -117 , 81 , 27 , -20 , -15 , -72 , 15 , 122 , -35 , -21 , 21 , 111 , 91 , -102 , 73 , 75 , 2 , 3 , 1 , 0 , 1 , 0 , 0 , 0 , 10 , 49 , 48 , 46 , 50 , 46 , 49 , 46 , 49 , 57 , 48 , 0 , 0 , 38 , -96             }
        }
    }};



# define KAA_CONFIGURATION_DATA_LENGTH    18

static const char KAA_CONFIGURATION_DATA[KAA_CONFIGURATION_DATA_LENGTH] =
{
0 , 0 , -16 , -40 , -108 , 10 , 4 , 42 , 76 , -47 , -117 , -4 , -34 , 86 , -9 , 21 , -33 , -58 };

# ifdef __cplusplus
} // extern "C"
# endif

# endif /* KAA_DEFAULTS_H_ */

