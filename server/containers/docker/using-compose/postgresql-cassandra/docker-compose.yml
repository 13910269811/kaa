# Run Kaa IoT using PostgreSQL and Cassandra

version: '2'
services:
  sql:
    image: postgres:9.4
    networks:
      - back-tier
    volumes:
      - sql-data:/var/lib/postgresql
    env_file: sql-example.env
  zookeeper:
    image: jplock/zookeeper:3.4.8
    networks:
      - back-tier
    volumes:
      - zookeeper-data:/tmp/zookeeper
  nosql:
    image: cassandra:latest
    networks:
      - back-tier
    volumes:
      - nosql-data:/data/db
    environment:
      - CASSANDRA_START_RPC=true
    stdin_open: false
    mem_limit: "4G"
  kaa:
    image: kaa-node:0.10.0
    # build: .
    env_file: kaa-example.env
    environment:
      - SQL_PROVIDER_NAME=postgresql
      - NOSQL_PROVIDER_NAME=cassandra # (optional, default: mongodb)
      - SERVICES_WAIT_TIMEOUT=-1 # Wait forever for Zookeeper and SQL
    depends_on:
      - sql
      - nosql
      - zookeeper
    networks:
      - back-tier
      - front-tier
    ports:
      - "8080"
      - "9888"
      - "9889"
      - "9997"
      - "9999"
  kaa_lb:
    image: dockercloud/haproxy:latest
    networks:
      - back-tier
    environment:
        - BALANCE=source
    ports:
      - "8078:8078"
      - "9888:9888"
      - "9889:9889"
      - "9997:9997"
      - "9999:9999"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    links:
        - kaa:kaa
networks:
  back-tier:
    driver: bridge # overlay for Swarm (unreleased update)
  front-tier:
    driver: bridge # overlay for Swarm (unreleased update)
volumes:
  sql-data:
  nosql-data:
  zookeeper-data:
