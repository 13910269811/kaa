akka {
  actor {
    # This dispatcher is used for encoding and decoding of transport messages
    io-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 4
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64
        
        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 1.0
      }
      # How long time the dispatcher will wait for new actors until it shuts down
      shutdown-timeout = 1s
      
      # Throughput defines the number of messages that are processed in a batch
      # before the thread is returned to the pool. Set to 1 for as fair as possible.
      throughput = 5
    }
    # Core dispatcher for tenant and application actors
    core-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 2
        
        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 1.0
      }
      # How long time the dispatcher will wait for new actors until it shuts down
      shutdown-timeout = 1s
      
      # Throughput defines the number of messages that are processed in a batch
      # before the thread is returned to the pool. Set to 1 for as fair as possible.
      throughput = 5
    }
  }
}