/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.server.common.dao.model.sql.avro.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FlumeAppenderParameters extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FlumeAppenderParameters\",\"namespace\":\"org.kaaproject.kaa.server.common.dao.model.sql.avro.gen\",\"fields\":[{\"name\":\"hostsInfo\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"HostInfo\",\"fields\":[{\"name\":\"hostname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"priority\",\"type\":\"int\"}]}]}},{\"name\":\"balancingType\",\"type\":{\"type\":\"enum\",\"name\":\"FlumeBalancingType\",\"symbols\":[\"PRIORITIZED\",\"ROUND_ROBIN\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.util.List<java.lang.Object> hostsInfo;
   private org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType balancingType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public FlumeAppenderParameters() {}

  /**
   * All-args constructor.
   */
  public FlumeAppenderParameters(java.util.List<java.lang.Object> hostsInfo, org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType balancingType) {
    this.hostsInfo = hostsInfo;
    this.balancingType = balancingType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return hostsInfo;
    case 1: return balancingType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: hostsInfo = (java.util.List<java.lang.Object>)value$; break;
    case 1: balancingType = (org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hostsInfo' field.
   */
  public java.util.List<java.lang.Object> getHostsInfo() {
    return hostsInfo;
  }

  /**
   * Sets the value of the 'hostsInfo' field.
   * @param value the value to set.
   */
  public void setHostsInfo(java.util.List<java.lang.Object> value) {
    this.hostsInfo = value;
  }

  /**
   * Gets the value of the 'balancingType' field.
   */
  public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType getBalancingType() {
    return balancingType;
  }

  /**
   * Sets the value of the 'balancingType' field.
   * @param value the value to set.
   */
  public void setBalancingType(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType value) {
    this.balancingType = value;
  }

  /** Creates a new FlumeAppenderParameters RecordBuilder */
  public static org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder newBuilder() {
    return new org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder();
  }
  
  /** Creates a new FlumeAppenderParameters RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder newBuilder(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder other) {
    return new org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder(other);
  }
  
  /** Creates a new FlumeAppenderParameters RecordBuilder by copying an existing FlumeAppenderParameters instance */
  public static org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder newBuilder(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters other) {
    return new org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder(other);
  }
  
  /**
   * RecordBuilder for FlumeAppenderParameters instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FlumeAppenderParameters>
    implements org.apache.avro.data.RecordBuilder<FlumeAppenderParameters> {

    private java.util.List<java.lang.Object> hostsInfo;
    private org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType balancingType;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.hostsInfo)) {
        this.hostsInfo = data().deepCopy(fields()[0].schema(), other.hostsInfo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.balancingType)) {
        this.balancingType = data().deepCopy(fields()[1].schema(), other.balancingType);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FlumeAppenderParameters instance */
    private Builder(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters other) {
            super(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.SCHEMA$);
      if (isValidValue(fields()[0], other.hostsInfo)) {
        this.hostsInfo = data().deepCopy(fields()[0].schema(), other.hostsInfo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.balancingType)) {
        this.balancingType = data().deepCopy(fields()[1].schema(), other.balancingType);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'hostsInfo' field */
    public java.util.List<java.lang.Object> getHostsInfo() {
      return hostsInfo;
    }
    
    /** Sets the value of the 'hostsInfo' field */
    public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder setHostsInfo(java.util.List<java.lang.Object> value) {
      validate(fields()[0], value);
      this.hostsInfo = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'hostsInfo' field has been set */
    public boolean hasHostsInfo() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'hostsInfo' field */
    public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder clearHostsInfo() {
      hostsInfo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'balancingType' field */
    public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType getBalancingType() {
      return balancingType;
    }
    
    /** Sets the value of the 'balancingType' field */
    public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder setBalancingType(org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType value) {
      validate(fields()[1], value);
      this.balancingType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'balancingType' field has been set */
    public boolean hasBalancingType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'balancingType' field */
    public org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeAppenderParameters.Builder clearBalancingType() {
      balancingType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public FlumeAppenderParameters build() {
      try {
        FlumeAppenderParameters record = new FlumeAppenderParameters();
        record.hostsInfo = fieldSetFlags()[0] ? this.hostsInfo : (java.util.List<java.lang.Object>) defaultValue(fields()[0]);
        record.balancingType = fieldSetFlags()[1] ? this.balancingType : (org.kaaproject.kaa.server.common.dao.model.sql.avro.gen.FlumeBalancingType) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
