/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.server.common.zk.gen;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BootstrapNodeInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BootstrapNodeInfo\",\"namespace\":\"org.kaaproject.kaa.server.common.zk.gen\",\"fields\":[{\"name\":\"connectionInfo\",\"type\":{\"type\":\"record\",\"name\":\"ConnectionInfo\",\"fields\":[{\"name\":\"thriftHost\",\"type\":\"string\"},{\"name\":\"thriftPort\",\"type\":\"int\"},{\"name\":\"publicKey\",\"type\":[\"bytes\",\"null\"]}]}},{\"name\":\"SupportedChannelsArray\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BootstrapSupportedChannel\",\"fields\":[{\"name\":\"ZkChannel\",\"type\":{\"type\":\"record\",\"name\":\"ZkSupportedChannel\",\"fields\":[{\"name\":\"ChannelType\",\"type\":{\"type\":\"enum\",\"name\":\"ZkChannelType\",\"symbols\":[\"HTTP\",\"HTTP_LP\",\"KAATCP\"]}},{\"name\":\"RedirectionSupported\",\"type\":\"boolean\"},{\"name\":\"CommunicationParameters\",\"type\":[{\"type\":\"record\",\"name\":\"ZkHttpComunicationParameters\",\"fields\":[{\"name\":\"ZkComunicationParameters\",\"type\":{\"type\":\"record\",\"name\":\"IpComunicationParameters\",\"fields\":[{\"name\":\"HostName\",\"type\":\"string\"},{\"name\":\"Port\",\"type\":\"int\"}]}}]},{\"type\":\"record\",\"name\":\"ZkHttpLpComunicationParameters\",\"fields\":[{\"name\":\"ZkComunicationParameters\",\"type\":\"IpComunicationParameters\"}]},{\"type\":\"record\",\"name\":\"ZkKaaTcpComunicationParameters\",\"fields\":[{\"name\":\"ZkComunicationParameters\",\"type\":\"IpComunicationParameters\"}]}]},{\"name\":\"ChannelStatistics\",\"type\":[{\"type\":\"record\",\"name\":\"ZkHttpStatistics\",\"fields\":[{\"name\":\"ZkStatistics\",\"type\":{\"type\":\"record\",\"name\":\"BaseStatistics\",\"fields\":[{\"name\":\"processedRequestCount\",\"type\":\"int\"},{\"name\":\"registeredUsersCount\",\"type\":\"int\"},{\"name\":\"deltaCalculationCount\",\"type\":\"int\"},{\"name\":\"timeStarted\",\"type\":\"long\"}]}}]},{\"type\":\"record\",\"name\":\"ZkHttpLpStatistics\",\"fields\":[{\"name\":\"ZkStatistics\",\"type\":\"BaseStatistics\"}]},{\"type\":\"record\",\"name\":\"ZkKaaTcpStatistics\",\"fields\":[{\"name\":\"ZkStatistics\",\"type\":\"BaseStatistics\"}]}]}]}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo connectionInfo;
   private java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> SupportedChannelsArray;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}.
   */
  public BootstrapNodeInfo() {}

  /**
   * All-args constructor.
   */
  public BootstrapNodeInfo(org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo connectionInfo, java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> SupportedChannelsArray) {
    this.connectionInfo = connectionInfo;
    this.SupportedChannelsArray = SupportedChannelsArray;
  }

  @Override
public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  @Override
public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return connectionInfo;
    case 1: return SupportedChannelsArray;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @Override
@SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: connectionInfo = (org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo)value$; break;
    case 1: SupportedChannelsArray = (java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'connectionInfo' field.
   */
  public org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo getConnectionInfo() {
    return connectionInfo;
  }

  /**
   * Sets the value of the 'connectionInfo' field.
   * @param value the value to set.
   */
  public void setConnectionInfo(org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo value) {
    this.connectionInfo = value;
  }

  /**
   * Gets the value of the 'SupportedChannelsArray' field.
   */
  public java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> getSupportedChannelsArray() {
    return SupportedChannelsArray;
  }

  /**
   * Sets the value of the 'SupportedChannelsArray' field.
   * @param value the value to set.
   */
  public void setSupportedChannelsArray(java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> value) {
    this.SupportedChannelsArray = value;
  }

  /** Creates a new BootstrapNodeInfo RecordBuilder */
  public static org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder newBuilder() {
    return new org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder();
  }

  /** Creates a new BootstrapNodeInfo RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder newBuilder(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder other) {
    return new org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder(other);
  }

  /** Creates a new BootstrapNodeInfo RecordBuilder by copying an existing BootstrapNodeInfo instance */
  public static org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder newBuilder(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo other) {
    return new org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder(other);
  }

  /**
   * RecordBuilder for BootstrapNodeInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BootstrapNodeInfo>
    implements org.apache.avro.data.RecordBuilder<BootstrapNodeInfo> {

    private org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo connectionInfo;
    private java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> SupportedChannelsArray;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.connectionInfo)) {
        this.connectionInfo = data().deepCopy(fields()[0].schema(), other.connectionInfo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.SupportedChannelsArray)) {
        this.SupportedChannelsArray = data().deepCopy(fields()[1].schema(), other.SupportedChannelsArray);
        fieldSetFlags()[1] = true;
      }
    }

    /** Creates a Builder by copying an existing BootstrapNodeInfo instance */
    private Builder(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo other) {
            super(org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.connectionInfo)) {
        this.connectionInfo = data().deepCopy(fields()[0].schema(), other.connectionInfo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.SupportedChannelsArray)) {
        this.SupportedChannelsArray = data().deepCopy(fields()[1].schema(), other.SupportedChannelsArray);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'connectionInfo' field */
    public org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo getConnectionInfo() {
      return connectionInfo;
    }

    /** Sets the value of the 'connectionInfo' field */
    public org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder setConnectionInfo(org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo value) {
      validate(fields()[0], value);
      this.connectionInfo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'connectionInfo' field has been set */
    public boolean hasConnectionInfo() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'connectionInfo' field */
    public org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder clearConnectionInfo() {
      connectionInfo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'SupportedChannelsArray' field */
    public java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> getSupportedChannelsArray() {
      return SupportedChannelsArray;
    }

    /** Sets the value of the 'SupportedChannelsArray' field */
    public org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder setSupportedChannelsArray(java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel> value) {
      validate(fields()[1], value);
      this.SupportedChannelsArray = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'SupportedChannelsArray' field has been set */
    public boolean hasSupportedChannelsArray() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'SupportedChannelsArray' field */
    public org.kaaproject.kaa.server.common.zk.gen.BootstrapNodeInfo.Builder clearSupportedChannelsArray() {
      SupportedChannelsArray = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public BootstrapNodeInfo build() {
      try {
        BootstrapNodeInfo record = new BootstrapNodeInfo();
        record.connectionInfo = fieldSetFlags()[0] ? this.connectionInfo : (org.kaaproject.kaa.server.common.zk.gen.ConnectionInfo) defaultValue(fields()[0]);
        record.SupportedChannelsArray = fieldSetFlags()[1] ? this.SupportedChannelsArray : (java.util.List<org.kaaproject.kaa.server.common.zk.gen.BootstrapSupportedChannel>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}