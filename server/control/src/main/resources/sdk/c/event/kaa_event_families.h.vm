/*
 * Copyright 2014 CyberVision, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#set ($prefix = $StyleUtils.toLowerUnderScore($namespacePrefix))

# ifndef KAA_${EVENT_FAMILY_NAME}_H
# define KAA_${EVENT_FAMILY_NAME}_H

# include "kaa_${event_family_name}_definitions.h" 

#foreach ($event in $incomingEventFqns)
#set($e_name = $StyleUtils.toLowerUnderScore($StyleUtils.removePackageName(${event})))
typedef void (* on_${prefix}_${e_name})(${prefix}_${e_name}_t *);
#end

#foreach ($event in $incomingEventFqns)
#set($e_name = $StyleUtils.toLowerUnderScore($StyleUtils.removePackageName(${event})))
void set_${prefix}_${e_name}_listener(on_${prefix}_${e_name});
#end

#foreach ($event in $outgoingEventFqns)
#set($e_name = $StyleUtils.toLowerUnderScore($StyleUtils.removePackageName(${event})))
void kaa_send_${prefix}_${e_name}(${prefix}_${e_name}_t *, const char *, size_t);
#end

#foreach ($event in $outgoingEventFqns)
#set($e_name = $StyleUtils.toLowerUnderScore($StyleUtils.removePackageName(${event})))
void kaa_add_${prefix}_${e_name}_event_to_block(${prefix}_${e_name}_t *event, const char *target, size_t target_len, kaa_trx_id trx_id);
#end

# endif // KAA_${EVENT_FAMILY_NAME}_H