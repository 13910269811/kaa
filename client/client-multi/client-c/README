#
# Copyright 2014-2015 CyberVision, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

************************************
PREREQUISITES
************************************

Before building the C endpoint SDK, ensure the following components 
are installed:

1. C compiler supporting the C11 standard
2. cmake 2.8.8 or later

To build the Kaa SDK for the x86-64 platform, ensure that OpenSSL libraries
(ssl and crypto) are installed.

************************************
INSTALL
************************************

To build the C endpoint SDK, do the following:

1. Download and untar the Kaa C SDK archive.
2. Run the following commands:

    mkdir build
    cd build
    cmake ..
    make
    make install

************************************
CONFIGURATION
************************************

To configure the C endpoint SDK build, you can optionally specify
the following parameters for the cmake command:

------------------------------------
KAA_DEBUG_ENABLED=[0|1] - build type.

Values:
0 - the release type
1 - the debug type

Default:
0
------------------------------------
KAA_MAX_LOG_LEVEL - maximum log level used by the Kaa SDK.

Values:
0 - NONE (no logs)
1 - FATAL
2 - ERROR
3 - WARN
4 - INFO
5 - DEBUG
6 - TRACE

Default:
4 - if KAA_DEBUG_ENABLED=0
6 - if KAA_DEBUG_ENABLED=1
------------------------------------
KAA_WITHOUT_<MODULE> - Kaa module to be omitted during the build.

Values:
EVENTS
LOGGING

Default:
All modules are present in the build.
------------------------------------
KAA_PLATFORM - SDK target platform.

Values:
x86-64

Default:
x86-64

Before running the cmake command with the KAA_PLATFORM parameter 
for a platform other than x86-64, do the following:

1. Create a folder in $KAA_HOME/listfiles/platform/ and name it
   using [a-zA-z_-] symbols. You will be able to use the folder name
   as a value for the KAA_PLATFORM parameter.

2. Put the CMakeLists.txt file into the created folder. This file may contain
   specific compilation/linking flags, platform-dependent source files,
   third-party library dependencies, that is all information necessary
   for building the C endpoint SDK for this platform.

3. Optionally, specify the following parameters in the CMakeLists.txt file:

    KAA_INCLUDE_PATHS        - full path(s) to folder(s) containing additional 
                               header files
    KAA_SOURCE_FILES         - full path(s) to additional source files
    KAA_THIRDPARTY_LIBRARIES - third-party libraries (the name of the library,
                               for example, ssl, crypto)

    In the CMakeLists.txt file:

    set(KAA_INCLUDE_PATHS
        ${KAA_INCLUDE_PATHS}
        path_to_folder_1_with_header_files
        path_to_folder_2_with_header_files
    )
    set(KAA_SOURCE_FILES
        ${KAA_SOURCE_FILES}
        path_to_source_file_1
        path_to_source_file_2
    )
    set(KAA_THIRDPARTY_LIBRARIES
        ${KAA_THIRDPARTY_LIBRARIES}
        some_library_1
        some_library_2
    )

************************************
BUILD EXAMPLE
************************************

The following example illustrates the build procedure for 
the debug x86-64 build with the INFO log level and the LOGGING module:

    mkdir build
    cd build
    cmake -DKAA_DEBUG_ENABLED=1 -DKAA_MAX_LOG_LEVEL=4 -DKAA_WITHOUT_EVENTS=1 ..
    make
    make install
