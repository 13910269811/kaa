/*
 * Copyright 2014 CyberVision, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.common.endpoint.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LongSyncRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LongSyncRequest\",\"namespace\":\"org.kaaproject.kaa.common.endpoint.gen\",\"fields\":[{\"name\":\"syncRequest\",\"type\":{\"type\":\"record\",\"name\":\"SyncRequest\",\"fields\":[{\"name\":\"applicationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"endpointPublicKeyHash\",\"type\":\"bytes\"},{\"name\":\"profileHash\",\"type\":\"bytes\"},{\"name\":\"configurationHash\",\"type\":\"bytes\"},{\"name\":\"topicListHash\",\"type\":\"bytes\"},{\"name\":\"appStateSeqNumber\",\"type\":\"int\"},{\"name\":\"acceptedUnicastNotifications\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"null\"]},{\"name\":\"topicStates\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TopicState\",\"fields\":[{\"name\":\"topicId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"seqNumber\",\"type\":\"int\"}]}},\"null\"]},{\"name\":\"subscriptionCommands\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SubscriptionCommand\",\"fields\":[{\"name\":\"topicId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"command\",\"type\":{\"type\":\"enum\",\"name\":\"SubscriptionCommandType\",\"symbols\":[\"ADD\",\"REMOVE\"]}}]}},\"null\"]}]}},{\"name\":\"timeout\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private org.kaaproject.kaa.common.endpoint.gen.SyncRequest syncRequest;
   private long timeout;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public LongSyncRequest() {}

  /**
   * All-args constructor.
   */
  public LongSyncRequest(org.kaaproject.kaa.common.endpoint.gen.SyncRequest syncRequest, java.lang.Long timeout) {
    this.syncRequest = syncRequest;
    this.timeout = timeout;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return syncRequest;
    case 1: return timeout;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: syncRequest = (org.kaaproject.kaa.common.endpoint.gen.SyncRequest)value$; break;
    case 1: timeout = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'syncRequest' field.
   */
  public org.kaaproject.kaa.common.endpoint.gen.SyncRequest getSyncRequest() {
    return syncRequest;
  }

  /**
   * Sets the value of the 'syncRequest' field.
   * @param value the value to set.
   */
  public void setSyncRequest(org.kaaproject.kaa.common.endpoint.gen.SyncRequest value) {
    this.syncRequest = value;
  }

  /**
   * Gets the value of the 'timeout' field.
   */
  public java.lang.Long getTimeout() {
    return timeout;
  }

  /**
   * Sets the value of the 'timeout' field.
   * @param value the value to set.
   */
  public void setTimeout(java.lang.Long value) {
    this.timeout = value;
  }

  /** Creates a new LongSyncRequest RecordBuilder */
  public static org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder newBuilder() {
    return new org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder();
  }
  
  /** Creates a new LongSyncRequest RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder newBuilder(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder other) {
    return new org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder(other);
  }
  
  /** Creates a new LongSyncRequest RecordBuilder by copying an existing LongSyncRequest instance */
  public static org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder newBuilder(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest other) {
    return new org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for LongSyncRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LongSyncRequest>
    implements org.apache.avro.data.RecordBuilder<LongSyncRequest> {

    private org.kaaproject.kaa.common.endpoint.gen.SyncRequest syncRequest;
    private long timeout;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.syncRequest)) {
        this.syncRequest = data().deepCopy(fields()[0].schema(), other.syncRequest);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timeout)) {
        this.timeout = data().deepCopy(fields()[1].schema(), other.timeout);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LongSyncRequest instance */
    private Builder(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest other) {
            super(org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.syncRequest)) {
        this.syncRequest = data().deepCopy(fields()[0].schema(), other.syncRequest);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timeout)) {
        this.timeout = data().deepCopy(fields()[1].schema(), other.timeout);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'syncRequest' field */
    public org.kaaproject.kaa.common.endpoint.gen.SyncRequest getSyncRequest() {
      return syncRequest;
    }
    
    /** Sets the value of the 'syncRequest' field */
    public org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder setSyncRequest(org.kaaproject.kaa.common.endpoint.gen.SyncRequest value) {
      validate(fields()[0], value);
      this.syncRequest = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'syncRequest' field has been set */
    public boolean hasSyncRequest() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'syncRequest' field */
    public org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder clearSyncRequest() {
      syncRequest = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'timeout' field */
    public java.lang.Long getTimeout() {
      return timeout;
    }
    
    /** Sets the value of the 'timeout' field */
    public org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder setTimeout(long value) {
      validate(fields()[1], value);
      this.timeout = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'timeout' field has been set */
    public boolean hasTimeout() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'timeout' field */
    public org.kaaproject.kaa.common.endpoint.gen.LongSyncRequest.Builder clearTimeout() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public LongSyncRequest build() {
      try {
        LongSyncRequest record = new LongSyncRequest();
        record.syncRequest = fieldSetFlags()[0] ? this.syncRequest : (org.kaaproject.kaa.common.endpoint.gen.SyncRequest) defaultValue(fields()[0]);
        record.timeout = fieldSetFlags()[1] ? this.timeout : (java.lang.Long) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
